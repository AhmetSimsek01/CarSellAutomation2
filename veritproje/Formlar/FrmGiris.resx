<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>